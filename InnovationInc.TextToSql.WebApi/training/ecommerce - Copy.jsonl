{"prompt": "Schema:\nRoles(RoleID, RoleName)\nUsers(UserID, RoleID, FirstName, LastName, Email, PasswordHash, DateOfBirth, CreatedAt)\nCategories(CategoryID, CategoryName)\nProducts(ProductID, CategoryID, ProductName, Price, StockQuantity)\nOrders(OrderID, UserID, OrderDate, TotalAmount)\nOrderItems(OrderItemID, OrderID, ProductID, Quantity, Price)\nAddresses(AddressID, UserID, Street, City, State, PostalCode, IsPrimary)\nPayments(PaymentID, OrderID, PaymentDate, PaymentMethod, Amount)\nReviews(ReviewID, ProductID, UserID, Rating, Comment, ReviewDate)\nCoupons(CouponID, Code, DiscountPercentage, ExpiryDate)\nWishlist(WishlistID, UserID, ProductID)\nCart(CartID, UserID)\nCartItems(CartItemID, CartID, ProductID, Quantity)\nShipment(ShipmentID, OrderID, ShippedDate, EstimatedDeliveryDate, Status)\nSuppliers(SupplierID, SupplierName, ContactEmail)\n\nRequest: List all users with their roles.", "completion": "SELECT Users.FirstName, Users.LastName, Roles.RoleName\nFROM Users\nINNER JOIN Roles ON Users.RoleID = Roles.RoleID;\n"}
{"prompt": "Schema:\nRoles(RoleID, RoleName)\nUsers(UserID, RoleID, FirstName, LastName, Email, PasswordHash, DateOfBirth, CreatedAt)\nCategories(CategoryID, CategoryName)\nProducts(ProductID, CategoryID, ProductName, Price, StockQuantity)\nOrders(OrderID, UserID, OrderDate, TotalAmount)\nOrderItems(OrderItemID, OrderID, ProductID, Quantity, Price)\nAddresses(AddressID, UserID, Street, City, State, PostalCode, IsPrimary)\nPayments(PaymentID, OrderID, PaymentDate, PaymentMethod, Amount)\nReviews(ReviewID, ProductID, UserID, Rating, Comment, ReviewDate)\nCoupons(CouponID, Code, DiscountPercentage, ExpiryDate)\nWishlist(WishlistID, UserID, ProductID)\nCart(CartID, UserID)\nCartItems(CartItemID, CartID, ProductID, Quantity)\nShipment(ShipmentID, OrderID, ShippedDate, EstimatedDeliveryDate, Status)\nSuppliers(SupplierID, SupplierName, ContactEmail)\n\nRequest: Get the total number of orders placed by each user.", "completion": "SELECT Users.FirstName, Users.LastName, COUNT(Orders.OrderID) AS TotalOrders\nFROM Users\nLEFT JOIN Orders ON Users.UserID = Orders.UserID\nGROUP BY Users.FirstName, Users.LastName;\n"}
{"prompt": "Schema:\nRoles(RoleID, RoleName)\nUsers(UserID, RoleID, FirstName, LastName, Email, PasswordHash, DateOfBirth, CreatedAt)\nCategories(CategoryID, CategoryName)\nProducts(ProductID, CategoryID, ProductName, Price, StockQuantity)\nOrders(OrderID, UserID, OrderDate, TotalAmount)\nOrderItems(OrderItemID, OrderID, ProductID, Quantity, Price)\nAddresses(AddressID, UserID, Street, City, State, PostalCode, IsPrimary)\nPayments(PaymentID, OrderID, PaymentDate, PaymentMethod, Amount)\nReviews(ReviewID, ProductID, UserID, Rating, Comment, ReviewDate)\nCoupons(CouponID, Code, DiscountPercentage, ExpiryDate)\nWishlist(WishlistID, UserID, ProductID)\nCart(CartID, UserID)\nCartItems(CartItemID, CartID, ProductID, Quantity)\nShipment(ShipmentID, OrderID, ShippedDate, EstimatedDeliveryDate, Status)\nSuppliers(SupplierID, SupplierName, ContactEmail)\n\nRequest: List all products that are out of stock.", "completion": "SELECT ProductName\nFROM Products\nWHERE StockQuantity = 0;\n"}
{"prompt": "Schema:\nRoles(RoleID, RoleName)\nUsers(UserID, RoleID, FirstName, LastName, Email, PasswordHash, DateOfBirth, CreatedAt)\nCategories(CategoryID, CategoryName)\nProducts(ProductID, CategoryID, ProductName, Price, StockQuantity)\nOrders(OrderID, UserID, OrderDate, TotalAmount)\nOrderItems(OrderItemID, OrderID, ProductID, Quantity, Price)\nAddresses(AddressID, UserID, Street, City, State, PostalCode, IsPrimary)\nPayments(PaymentID, OrderID, PaymentDate, PaymentMethod, Amount)\nReviews(ReviewID, ProductID, UserID, Rating, Comment, ReviewDate)\nCoupons(CouponID, Code, DiscountPercentage, ExpiryDate)\nWishlist(WishlistID, UserID, ProductID)\nCart(CartID, UserID)\nCartItems(CartItemID, CartID, ProductID, Quantity)\nShipment(ShipmentID, OrderID, ShippedDate, EstimatedDeliveryDate, Status)\nSuppliers(SupplierID, SupplierName, ContactEmail)\n\nRequest: List all customers who have not placed any orders.", "completion": "SELECT Users.FirstName, Users.LastName\nFROM Users\nLEFT JOIN Orders ON Users.UserID = Orders.UserID\nWHERE Orders.OrderID IS NULL;\n"}
{"prompt": "Schema:\nRoles(RoleID, RoleName)\nUsers(UserID, RoleID, FirstName, LastName, Email, PasswordHash, DateOfBirth, CreatedAt)\nCategories(CategoryID, CategoryName)\nProducts(ProductID, CategoryID, ProductName, Price, StockQuantity)\nOrders(OrderID, UserID, OrderDate, TotalAmount)\nOrderItems(OrderItemID, OrderID, ProductID, Quantity, Price)\nAddresses(AddressID, UserID, Street, City, State, PostalCode, IsPrimary)\nPayments(PaymentID, OrderID, PaymentDate, PaymentMethod, Amount)\nReviews(ReviewID, ProductID, UserID, Rating, Comment, ReviewDate)\nCoupons(CouponID, Code, DiscountPercentage, ExpiryDate)\nWishlist(WishlistID, UserID, ProductID)\nCart(CartID, UserID)\nCartItems(CartItemID, CartID, ProductID, Quantity)\nShipment(ShipmentID, OrderID, ShippedDate, EstimatedDeliveryDate, Status)\nSuppliers(SupplierID, SupplierName, ContactEmail)\n\nRequest: List all shipments and their associated product names.", "completion": "The requirement is not met by the schema.\n"}
